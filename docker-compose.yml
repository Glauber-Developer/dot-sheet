version: '3.8'

services:
  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    networks:
      - eureka-network
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest  

  # Eureka Server
  eureka-server:
    build:
      context: ./eureka_server
      dockerfile: Dockerfile
    container_name: eureka-server
    environment:
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - EUREKA_SERVER_ENABLE_SELF_PRESERVATION=false
      - EUREKA_INSTANCE_HOSTNAME=eureka-server
      - SPRING_APPLICATION_NAME=eureka-server
    networks:
      - eureka-network
    ports:
      - "8761:8761"
    depends_on:
      - rabbitmq

  # API Gateway
  api-gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_APPLICATION_NAME=api-gateway
    networks:
      - eureka-network
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server

  # Payroll Service
  payroll-service:
    build:
      context: ./payroll_service
      dockerfile: Dockerfile
    container_name: payroll-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://payroll-db:5432/payroll
      - SPRING_DATASOURCE_USERNAME=payroll
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_APPLICATION_NAME=payroll-service
    networks:
      - eureka-network
    ports:
      - "8087:8087"
    depends_on:
      - payroll-db
      - eureka-server
      - rabbitmq

  payroll-db:
    image: postgres:latest
    restart: always
    container_name: payroll-db
    environment:
      POSTGRES_DB: payroll
      POSTGRES_USER: payroll
      POSTGRES_PASSWORD: password
    networks:
      - eureka-network
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payroll"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Attendance Service
  attendance-service:
    build:
      context: ./attendance_service
      dockerfile: Dockerfile
    container_name: attendance-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://attendance-db:5432/attendance
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_APPLICATION_NAME=attendance-service
    networks:
      - eureka-network
    ports:
      - "8086:8086"
    depends_on:
      - attendance-db
      - eureka-server
      - rabbitmq

  attendance-db:
    image: postgres:latest
    restart: always
    container_name: attendance-db
    environment:
      POSTGRES_DB: attendance
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - eureka-network
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d attendance"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Reporting Service
  reporting-service:
    build:
      context: ./reporting_service
      dockerfile: Dockerfile
    container_name: reporting-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://reporting-db:5432/reporting
      - SPRING_DATASOURCE_USERNAME=reporting
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_APPLICATION_NAME=reporting-service
    networks:
      - eureka-network
    ports:
      - "8085:8085"
    depends_on:
      - reporting-db
      - eureka-server
      - rabbitmq

  reporting-db:
    image: postgres:latest
    restart: always
    container_name: reporting-db
    environment:
      POSTGRES_DB: reporting
      POSTGRES_USER: reporting
      POSTGRES_PASSWORD: password
    networks:
      - eureka-network
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reporting"]
      interval: 30s
      timeout: 10s
      retries: 5

  # User Service
  user-service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_APPLICATION_NAME=user-service
    networks:
      - eureka-network
    ports:
      - "8084:8084"
    depends_on:
      - user-db
      - eureka-server
      - rabbitmq

  user-db:
    image: postgres:latest
    restart: always
    container_name: user-db
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - eureka-network
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  eureka-network:
    driver: bridge
